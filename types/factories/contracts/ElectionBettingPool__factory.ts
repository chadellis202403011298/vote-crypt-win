/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ElectionBettingPool,
  ElectionBettingPoolInterface,
} from "../../contracts/ElectionBettingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ClaimNotReady",
    type: "error",
  },
  {
    inputs: [],
    name: "DuplicateCommitment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ElectionAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ElectionLocked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ElectionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "count",
        type: "uint8",
      },
    ],
    name: "InvalidCandidateCount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "InvalidGatewayPayload",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "SettlementPending",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "TicketAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "TicketNotOwned",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "WinningTotalsZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "candidateCount",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
    ],
    name: "ElectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "winningCandidate",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ElectionSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payoutWei",
        type: "uint256",
      },
    ],
    name: "PredictionPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "PredictionPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EDITOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GATEWAY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CANDIDATES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESULT_ORACLE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SCALE",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proofCandidate",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proofStake",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "candidateCount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
    ],
    name: "createElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "gatewayCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "getElection",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "candidateCount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "winningCandidate",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "payoutRatio",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "totalDepositedWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPaidWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gatewayRequestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "winningTotalScaled",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getPayoutDecryption",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "electionId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "fulfilled",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "payoutRatio",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "poolScaled",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "winningScaled",
            type: "uint64",
          },
        ],
        internalType: "struct ElectionBettingPool.PayoutDecryption",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "getTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "electionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bettor",
            type: "address",
          },
          {
            internalType: "externalEuint32",
            name: "encryptedCandidate",
            type: "bytes32",
          },
          {
            internalType: "externalEuint64",
            name: "encryptedStake",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct ElectionBettingPool.Ticket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "getTicketsForElection",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "encryptedCandidate",
        type: "bytes32",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedStake",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "placePrediction",
    outputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "winningCandidate",
        type: "uint8",
      },
    ],
    name: "settleElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawSurplus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200025857620029e290601f38839003908101601f19168201906001600160401b038211838310176200025d578083916040958694855283398101031262000258576200005d6020620000558362000293565b920162000293565b90600060606200006c62000273565b828152826020820152828682015201526200008662000273565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c28812918288820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970391825416179055600160075560018060a01b03808216156200022357821615620001ec5790620001d682620001cf620001dd94620002a8565b5062000328565b50620003ca565b505161255a9081620004688239f35b825162461bcd60e51b815260206004820152601060248201526f11d85d195dd85e481c995c5d5a5c995960821b6044820152606490fd5b835162461bcd60e51b815260206004820152600e60248201526d10591b5a5b881c995c5d5a5c995960921b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190608082016001600160401b038111838210176200025d57604052565b51906001600160a01b03821682036200025857565b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166200032457818052816020526040822081835260205260408220600160ff198254161790553391600080516020620029c28339815191528180a4600190565b5090565b6001600160a01b031660008181527fa74d116c0406588b87fcebe22b8d03a12bf1aa08ea523c2004e00dd791abafe360205260408120549091907f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c9060ff16620003c557808352826020526040832082845260205260408320600160ff19825416179055600080516020620029c2833981519152339380a4600190565b505090565b6001600160a01b031660008181527f59c0980bfaec0307574430d6763959542abfd6e2a2838a35f6554be2d921c8a060205260408120549091907fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a9060ff16620003c557808352826020526040832082845260205260408320600160ff19825416179055600080516020620029c2833981519152339380a460019056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461135a5750816308aa325f14610f125781630fabf88114610e735781631e9ee44414610db7578163248a9ca314610d8d5781632f2ff15d14610d6f57816336568abe14610d3457816357adcbc314610ab957816370f37d2714610aa25781637dc379fa146109d45781638396ef64146108135781639097f8ff1461079157816391d14854146107575781639471857d146103e8578163979db21b146103ad5781639d7107771461030e578163a217fddf146102f3578163a853211a146102b8578163b4845fff146101f257508063c50d6dd9146101b8578063d547741f14610184578063da1f12ab14610168578063eced55261461014b5763f07860961461012d57600080fd5b346101475781600319360112610147576020905160088152f35b5080fd5b503461014757816003193601126101475760209051620f42408152f35b5034610147578160031936011261014757602090516127118152f35b50346101475760016101b4916101af61019c3661142e565b9390928387528660205286200154611cb5565b611d59565b5080f35b5034610147578160031936011261014757602090517fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a8152f35b919050346102b457806003193601126102b45781356001600160a01b038116908190036102b057610221611c5d565b8015610279578380808093602435905af161023a6115d3565b5015610244578280f35b906020606492519162461bcd60e51b8352820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152fd5b815162461bcd60e51b81526020818501526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b8380fd5b8280fd5b505034610147578160031936011261014757602090517f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c8152f35b50503461014757816003193601126101475751908152602090f35b9050346102b45760203660031901126102b4578161014093823581526001602052208054926001820154916002810154926001600160401b039482015490600360058401549301549360ff81519881811615158a5260081c16602089015287015260ff84161515606087015260ff8460081c166080870152848460101c1660a087015260c086015260e085015261010084015260501c16610120820152f35b505034610147578160031936011261014757602090517ffb00fa0c30af3f14d2520274f3a36283c33ef91fc8bc1f424b133d150af8e8058152f35b838360a03660031901126101475782359060243592604435916064356001600160401b0381116102b45761041f90369088016113ad565b9095608435868552600192602098848a528587209160ff91828454161561074057868401544210801590610733575b61071c578415801561070a575b6106fa5791868d92816104938f9799989661048d8f9161048561047f36888461151a565b8d611e97565b95369161151a565b90611fab565b9161049e3082612067565b6104a83084612067565b6104b23382612067565b6104bc3384612067565b6104d860068b016104ce858254611dce565b8091553090612067565b8c60078b01925b610630575b50505050505090600592916105ad95016104ff3482546115c6565b90558088528b8252868820805460ff191687179055600754986105218a611b90565b600755875194610530866114b0565b8b86528386013381528987019182526060870192835260808701938452600260a08801958c87528d8d5252898b20965187558887019060018060a01b039051166bffffffffffffffffffffffff60a01b825416179055516002860155516003850155518b84015551151591019060ff801983541691151516179055565b84835260038652818320805491600160401b83101561061d57820180825582101561060a57835285832001839055519282913391907f13257558ee600d19db4f493023bffa1f0b2af618bfb589eaf442307e9363d8b79080a48152f35b634e487b7160e01b845260328852602484fd5b634e487b7160e01b855260418952602485fd5b9193959092949698999787895460081c1691888416928310156106ee57505086916106da8661069c61066b6106658b966120c7565b88611b9f565b610686610678868b611574565b949054600395861b1c611dce565b610690868b611574565b905490851b1c91612238565b6106c06106a9858a611574565b819391549060031b91821b91600019901b19161790565b90556106cc8388611574565b919091309254911b1c612067565b0116918f9492918f979998969492846104df565b969450979998966104e4565b875163721d2c7d60e11b81528d90fd5b508489528c8c5282888a20541661045b565b8751631bc2b60960e21b8152808e018c9052602490fd5b508260028501541661044e565b8751630272ce4360e61b8152808e018c9052602490fd5b5050346101475760ff8160209361076d3661142e565b9082528186528282206001600160a01b039091168252855220549151911615158152f35b83915034610147576107a2366113df565b947fb90e9995c6170fff8ea03e9ad6919878e483770c237f1a6f330ceaa7112b344a9491949392938088528760205288882033895260205260ff8989205416156107f65750506107f3959650611603565b80f35b6044925088519163e2517d3f60e01b835233908301526024820152fd5b9050346102b45760603660031901126102b457803591610831611454565b90604435927f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c908187528660205282872033885260205260ff9160ff8489205416156109b7575060ff841690811580156109ad575b61099857428611156109815786885260019160016020528489209182549060ff821661096a575061ffff1916600887901b61ff0016176001178255908660018201556108e06108d3612198565b8060068401553090612067565b600701885b828582161061092f57855160ff88168152602081018990528a908a907f86c759e13ad13ad491ed10c128f66be9fc34c48e5a0fec39627a45178927531c9080604081015b0390a280f35b83859161093a612198565b6109476106a98387611574565b90556109636109568286611574565b9054309160031b1c612067565b01166108e5565b8651630bda119d60e21b81529081018a9052602490fd5b8351631bc2b60960e21b8152908101879052602490fd5b6024918451916331cdbdcd60e11b8352820152fd5b5060088211610886565b6044925083519163e2517d3f60e01b835233908301526024820152fd5b9050346102b45760203660031901126102b457818360c09460a083516109f9816114b0565b8281528260208201528285820152826060820152826080820152015282358152600260205220825191610a2b836114b0565b81549384845260018060a01b0380600185015416906020860191825260028501549183870192835260a060ff600560038901549760608b019889528901549860808b01998a5201541697019615158752835197885251166020870152519085015251606084015251608083015251151560a0820152f35b8380600319360112610ab6576107f3611c5d565b80fd5b9050346102b457816003193601126102b457803591610ad6611454565b917ffb00fa0c30af3f14d2520274f3a36283c33ef91fc8bc1f424b133d150af8e80590818652602091868352838720338852835260ff8488205416156109b757508486526001825282862090815460ff811615610d1d5760ff8087169160081c16811015610d07575060028201805460ff8116610cf05761ffff1916600887901b61ff0016176001179055835190610b6d82611464565b600282528436858401376006830154610b8583611551565b52610b938660078501611574565b905491835160011015610cdd57509361092993610be060039794610cc3947fb211a684eae384513c8e36d49628deecfffd0294f8aa9f518f3a958c42324cda9a988a1b1c868201526122c1565b9687910155610c7386610c9b8b865194610bf986611495565b8c8652610c416001828801978489528a8082019580875260056060840196828852608085019a838c5283525220905181550196511515879060ff801983541691151516179055565b9051855468ffffffffffffffff00191660089190911b68ffffffffffffffff00161785556001600160401b0393849190565b51855467ffffffffffffffff60481b1916911660481b67ffffffffffffffff60481b16178455565b51825467ffffffffffffffff60881b1916911660881b67ffffffffffffffff60881b16179055565b51928392836020909392919360ff60408201951681520152565b634e487b7160e01b8a5260329052602489fd5b855163208f2a7960e01b8152808401899052602490fd5b84516331cdbdcd60e11b81529182015260249150fd5b8451630272ce4360e61b8152808301889052602490fd5b83833461014757610d443661142e565b91336001600160a01b03841603610d605750906101b491611d59565b5163334bd91960e11b81528490fd5b5050346101475760016101b491610d8861019c3661142e565b611cdb565b9050346102b45760203660031901126102b457816020936001923581528085522001549051908152f35b9050346102b45760203660031901126102b45782829160a09460808451610ddd81611495565b82815282602082015282868201528260608201520152358152600560205220908051610e0881611495565b6001835493848352015490602081019060ff8316151582526001600160401b039384809382840190828760081c1682528260806060870196828a60481c168852019760881c168752835198895251151560208901525116908601525116606084015251166080820152f35b90508234610ab657602091826003193601126101475792919235815260038352818120908251808584549182815201908194845286842090845b818110610efe5750505081610ec39103826114de565b83519485948186019282875251809352850193925b828110610ee757505050500390f35b835185528695509381019392810192600101610ed8565b825484529288019260019283019201610ead565b83833461014757610f22366113df565b939283879693929652602092600284528088209260018060a01b0392600197848987015416330361134357600586019960ff8b541661132c57865493848d528a8952858d2093600285019460ff8654161561131557878f60038f930154815260058d5220019560ff875416156112ff5750888f948f94610fd2610ff19261048d8f97936003610fc760ff96610fc1610ff79b60028c015492369161151a565b90611e97565b97015492369161151a565b97610fdd3085612067565b610fe7308a612067565b5460081c166120c7565b90611b9f565b9360446000805160206124e5833981519152948986541694895195869485936307227b9160e21b8552840152600660248401525af19081156112595790888e8e9384936112cc575b5060446001600160401b0380985460081c16918a875416958a519687948593639cd07acb60e01b8552840152600660248401525af19182156112c257908e8e8b938195611289575b50848315611279575b15611263575b906064918a8754168a519687958694630afe14ad60e31b865285015260248401528160448401525af1908115611259579188918e8e9594869261121e575b5088821561120b575b6064929354169588519687948593635a53accb60e01b8552840152620f42406024840152600160f81b60448401525af18015611201578b906111cc575b61112d9250611127612148565b91612238565b825191828401908111838210176111b957839260069261116692600299989796528a825287368184013761116082611551565b526122c1565b93549482519761117589611464565b8852808801943386528389019687528b52528820945185558585019151166bffffffffffffffffffffffff60a01b8254161790555191015560ff1982541617905580f35b634e487b7160e01b8b5260418c5260248bfd5b50908681813d83116111fa575b6111e381836114de565b810103126111f6579061112d915161111a565b8a80fd5b503d6111d9565b84513d8d823e3d90fd5b60649250611217612148565b92506110dd565b9392949550505081813d8311611252575b61123981836114de565b8101031261124e57518b929188918e386110d4565b8b80fd5b503d61122f565b85513d8e823e3d90fd5b9350606490611270612148565b94909150611096565b9250611283612148565b92611090565b93929450505081813d83116112bb575b6112a381836114de565b810103126112b757519088908e8e38611087565b8c80fd5b503d611299565b86513d8f823e3d90fd5b935050905081813d83116112f8575b6112e581836114de565b8101031261124e57518b90888e3861103f565b503d6112db565b8f6024918951916353f6b38b60e01b8352820152fd5b5060248f8789519163208f2a7960e01b8352820152fd5b845163337af4b560e01b8152808e018a9052602490fd5b8351633bec67ed60e11b8152808d01899052602490fd5b8491346102b45760203660031901126102b4573563ffffffff60e01b81168091036102b45760209250637965db0b60e01b811490811561139c575b5015158152f35b6301ffc9a760e01b14905083611395565b9181601f840112156113da578235916001600160401b0383116113da57602083818601950101116113da57565b600080fd5b9060606003198301126113da57600435916001600160401b03916024358381116113da5782611410916004016113ad565b939093926044359182116113da5761142a916004016113ad565b9091565b60409060031901126113da57600435906024356001600160a01b03811681036113da5790565b6024359060ff821682036113da57565b606081019081106001600160401b0382111761147f57604052565b634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b0382111761147f57604052565b60c081019081106001600160401b0382111761147f57604052565b6001600160401b03811161147f57604052565b90601f801991011681019081106001600160401b0382111761147f57604052565b6001600160401b03811161147f57601f01601f191660200190565b929192611526826114ff565b9161153460405193846114de565b8294818452818301116113da578281602093846000960137010152565b80511561155e5760200190565b634e487b7160e01b600052603260045260246000fd5b600882101561155e570190600090565b35906001600160401b03821682036113da57565b90620f4240918281029281840414901517156115b057565b634e487b7160e01b600052601160045260246000fd5b919082018092116115b057565b3d156115fe573d906115e4826114ff565b916115f260405193846114de565b82523d6000602084013e565b606090565b9394926116209092919261161836848661151a565b96369161151a565b846000527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf018060205260406000205415611b7e578560005260205260406000206040518082602082945493848152019060005260206000209260005b818110611b65575050611691925003826114de565b8651968760200197886020116115b0576040018098116115b057604051978189925190816020850191602001916116c792611e4f565b8201906020820152036020810188526040016116e390886114de565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649703546040516378542ead60e01b815260606004820152926001600160a01b03909116918391829161173890606484019061228d565b996003199060249b82858203018d86015261175291611e72565b9083820301604484015261176591611e72565b03815a602094600091f1908115611b5957600091611b1e575b5015611b0c57604051847f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d600080a28460005260056020526040600020805480151580611afd575b61198a57505050836000526006602052604060002090604051906117e982611464565b82549384835260018060a01b036001850154169060026020850195838752015492604085019384528661182e5760405163d8de33b160e01b8152600481018a90528a90fd5b81602091819b969798999b0103126113da57356fffffffffffffffffffffffffffffffff81168091036113da57620f4240900495861561195357505047851161193d57516000526001602052600560406000200161188d8582546115c6565b905560008080808760018060a01b038851165af16118a96115d3565b501561190757505190516040519283526001600160a01b0316917f3812239cb5af8bbdf235275cde6e3ca85115ce1e24656ebe8bc7aef6861dfe4b90602090a35b600052600660205260006002604082208281558260018201550155565b606490600f6040519162461bcd60e51b8352602060048401528201526e151c985b9cd9995c8819985a5b1959608a1b6044820152fd5b516040519063c730333f60e01b82526004820152fd5b945094505050507f3812239cb5af8bbdf235275cde6e3ca85115ce1e24656ebe8bc7aef6861dfe4b602060405160008152a36118ea565b928492965093604091959794810103126113da576119b360206119ac83611584565b9201611584565b946001600160401b0392838716918215611aea57508060005260016020526040600020946119e46004870154611598565b91858516809303611ad557505092611a69611a9493611a4160018a95611a0c60029a99611598565b91909a01805468ffffffffffffffffff19169a90910494851660081b68ffffffffffffffff0016999099176001178955929792565b825467ffffffffffffffff60481b191660489190911b67ffffffffffffffff60481b16178255565b805467ffffffffffffffff60881b191660889290921b67ffffffffffffffff60881b16919091179055565b019169ffffffffffffffff00008354916001600160401b0360501b9060501b169260101b169071ffffffffffffffffffffffffffffffff0000191617179055565b6040519063c730333f60e01b82526004820152fd5b8591637c17890b60e11b82526004820152fd5b5060ff600183015416156117c6565b60405163cf6c44e960e01b8152600490fd5b90506020813d602011611b51575b81611b39602093836114de565b810103126113da575180151581036113da573861177e565b3d9150611b2c565b6040513d6000823e3d90fd5b845483526001948501948694506020909301920161167c565b60405163d66ca67560e01b8152600490fd5b60001981146115b05760010190565b8015611c4f575b8115611c3f575b60018060a01b036000805160206124e58339815191525416916040519163f77f3f1d60e01b835260048301526024820152602081606481600080968160448401525af1918215611c33578092611c0257505090565b9091506020823d602011611c2b575b81611c1e602093836114de565b81010312610ab657505190565b3d9150611c11565b604051903d90823e3d90fd5b9050611c496121e8565b90611bad565b50611c586121e8565b611ba6565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff1615611c975750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600060205260406000203360005260205260ff6040600020541615611c975750565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541615600014611d5457808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416600014611d545780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b8015611e41575b8115611e31575b60018060a01b036000805160206124e58339815191525416916040519163022f65e760e31b835260048301526024820152602081606481600080968160448401525af1918215611c33578092611c0257505090565b9050611e3b612198565b90611ddc565b50611e4a612198565b611dd5565b60005b838110611e625750506000910152565b8181015183820152602001611e52565b90602091611e8b81518092818552858086019101611e4f565b601f01601f1916010190565b6000805160206124e58339815191525460405163196d0b9b60e01b81526004810192909252336024830152608060448301526001600160a01b039392829160209183918716908290611eed906084830190611e72565b60046064830152600096879103925af1908115611fa0578291611f6e575b508093600080516020612505833981519152541690813b156102b457604051630f8e573b60e21b81526004810191909152336024820152919081908390818381604481015b03925af1908115611c335750611f635750565b611f6c906114cb565b565b90506020813d602011611f98575b81611f89602093836114de565b81010312610147575138611f0b565b3d9150611f7c565b6040513d84823e3d90fd5b6000805160206124e58339815191525460405163196d0b9b60e01b81526004810192909252336024830152608060448301526001600160a01b039392829160209183918716908290612001906084830190611e72565b60056064830152600096879103925af1908115611fa0578291611f6e57508093600080516020612505833981519152541690813b156102b457604051630f8e573b60e21b8152600481019190915233602482015291908190839081838160448101611f50565b600080516020612505833981519152546001600160a01b031691823b156113da57604051635ca4b5b160e11b815260048101929092526001600160a01b03166024820152906000908290604490829084905af18015611b5957611f635750565b6020600091604460018060a01b036000805160206124e58339815191525416916040519485938492639cd07acb60e01b84526004840152600460248401525af1908115611b5957600091612119575090565b90506020813d602011612140575b81612134602093836114de565b810103126113da575190565b3d9150612127565b60018060a01b036000805160206124e58339815191525416604051639cd07acb60e01b815260208160448160008096816004840152600660248401525af1918215611c33578092611c0257505090565b60018060a01b036000805160206124e58339815191525416604051639cd07acb60e01b815260208160448160008096816004840152600560248401525af1918215611c33578092611c0257505090565b60018060a01b036000805160206124e58339815191525416604051639cd07acb60e01b815260208160448160008096816004840152600460248401525af1918215611c33578092611c0257505090565b906064602092600060018060a01b036000805160206124e583398151915254166040519687958694637702dcff60e01b86526004860152602485015260448401525af1908115611b5957600091612119575090565b90815180825260208080930193019160005b8281106122ad575050505090565b83518552938101939281019260010161229f565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf00805460008051602061250583398151915254909392906001600160a01b0390811690600090823b15610147576040908151637d6e912360e11b81528381602096876004830152818381612338602482018d61228d565b03925af180156124d7576124c4575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b156102b4578282518092633263b83b60e01b82528a60048301526060602483015281838161239e606482018c61228d565b639097f8ff60e01b604483015203925af180156124b8579083916124a4575b508790527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf01808452818320546124935787835283528120918351936001600160401b03851161247f57600160401b851161247f5781908454868655808710612456575b5001928252808220915b8481106124445750505050506124408154611b90565b9055565b8351838201559281019260010161242a565b8585528683862091820191015b8181106124705750612420565b60008155849350600101612463565b634e487b7160e01b83526041600452602483fd5b8151633f06d22b60e01b8152600490fd5b6124ad906114cb565b6101475781386123bd565b505051903d90823e3d90fd5b6124d0909391936114cb565b9138612347565b50505051903d90823e3d90fdfe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a264697066735822122064c5e5439353d0a26b2a2e1d4b2b6a1b92c2a832f94ec99bf56af3ee9b43fc9164736f6c634300081800332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d";

type ElectionBettingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElectionBettingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElectionBettingPool__factory extends ContractFactory {
  constructor(...args: ElectionBettingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    admin: AddressLike,
    gateway: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(admin, gateway, overrides || {});
  }
  override deploy(
    admin: AddressLike,
    gateway: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(admin, gateway, overrides || {}) as Promise<
      ElectionBettingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ElectionBettingPool__factory {
    return super.connect(runner) as ElectionBettingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElectionBettingPoolInterface {
    return new Interface(_abi) as ElectionBettingPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ElectionBettingPool {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ElectionBettingPool;
  }
}
